{"paragraphs":[{"text":"%md\n## Projekt 2\n\n### Analiza 1\n\nTutaj jak powinna się ona nazywać po Polsku","user":"anonymous","dateUpdated":"2020-01-21T00:03:58+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Projekt 2</h2>\n<h3>Analiza 1</h3>\n<p>Tutaj jak powinna się ona nazywać po Polsku</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579564953754_1394902608","id":"20200121-000233_1747426625","dateCreated":"2020-01-21T00:02:33+0000","dateStarted":"2020-01-21T00:03:58+0000","dateFinished":"2020-01-21T00:04:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5741"},{"text":"val factsDS = spark.table(\"traffic.facts\").select(\"local_authority_ons_code\", \"date_id\", \"hour\", \"count\")\nval authoritiesDS = spark.table(\"traffic.authorities\").select(\"local_authority_ons_code\", \"region_name\")\nval datesDS = spark.table(\"traffic.dates\").select(\"id\", \"year\")","user":"anonymous","dateUpdated":"2020-01-21T00:21:34+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"factsDS: org.apache.spark.sql.DataFrame = [local_authority_ons_code: string, date_id: int ... 2 more fields]\nauthoritiesDS: org.apache.spark.sql.DataFrame = [local_authority_ons_code: string, region_name: string]\ndatesDS: org.apache.spark.sql.DataFrame = [id: int, year: int]\n"}]},"apps":[],"jobName":"paragraph_1579564956142_-1740651259","id":"20200121-000236_1461288918","dateCreated":"2020-01-21T00:02:36+0000","dateStarted":"2020-01-21T00:21:34+0000","dateFinished":"2020-01-21T00:21:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5742"},{"text":"val analiza1_DS = factsDS.\n    join(authoritiesDS, factsDS(\"local_authority_ons_code\") === authoritiesDS(\"local_authority_ons_code\")).\n    join(datesDS, factsDS(\"date_id\") === datesDS(\"id\")).\n    groupBy((floor(datesDS(\"year\")/10)).as(\"decades\"), factsDS(\"hour\")).\n    agg(sum(\"count\").as(\"sumOfAll\"))","user":"anonymous","dateUpdated":"2020-01-21T00:22:42+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"analiza1_DS: org.apache.spark.sql.DataFrame = [decades: bigint, hour: int ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1579564957627_1908638166","id":"20200121-000237_880133118","dateCreated":"2020-01-21T00:02:37+0000","dateStarted":"2020-01-21T00:22:42+0000","dateFinished":"2020-01-21T00:22:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5743"},{"text":"%md\n\n### Analiza 2\n\nTeż jak ona idzie po ludzku","user":"anonymous","dateUpdated":"2020-01-21T00:04:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Analiza 2</h3>\n<p>Też jak ona idzie po ludzku</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579565046549_-416141562","id":"20200121-000406_1788423413","dateCreated":"2020-01-21T00:04:06+0000","dateStarted":"2020-01-21T00:04:23+0000","dateFinished":"2020-01-21T00:04:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5744"},{"text":"val factsDS = spark.table(\"traffic.facts\").select(\"local_authority_ons_code\", \"weather_id\", \"vehicle_type_id\", \"count\")\nval authoritiesDS = spark.table(\"traffic.authorities\").select(\"local_authority_ons_code\", \"region_name\")\nval weathersDS = spark.table(\"traffic.weathers\").select(\"id\", \"weather\")\nval vehicle_typesDS = spark.table(\"traffic.vehicle_types\").select(\"type_id\", \"type_name\")","user":"anonymous","dateUpdated":"2020-01-20T23:45:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"factsDS: org.apache.spark.sql.DataFrame = [local_authority_ons_code: string, weather_id: int ... 2 more fields]\nauthoritiesDS: org.apache.spark.sql.DataFrame = [local_authority_ons_code: string, region_name: string]\nweathersDS: org.apache.spark.sql.DataFrame = [id: int, weather: string]\nvehicle_typesDS: org.apache.spark.sql.DataFrame = [type_id: int, type_name: string]\n"}]},"apps":[],"jobName":"paragraph_1579553793103_2139517667","id":"20200120-205633_807770401","dateCreated":"2020-01-20T20:56:33+0000","dateStarted":"2020-01-20T23:45:43+0000","dateFinished":"2020-01-20T23:45:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5745"},{"text":"val sumaPrzejazdowDlaPoszczegolnychTypowPojazdow = factsDS.\n    join(authoritiesDS, factsDS(\"local_authority_ons_code\") === authoritiesDS(\"local_authority_ons_code\")).\n    join(vehicle_typesDS, factsDS(\"vehicle_type_id\") === vehicle_typesDS(\"type_id\")).\n    groupBy(vehicle_typesDS(\"type_name\")).\n    agg(sum(\"count\").as(\"totalDlaPojazdu\"))","user":"anonymous","dateUpdated":"2020-01-20T23:45:47+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sumaPrzejazdowDlaPoszczegolnychTypowPojazdow: org.apache.spark.sql.DataFrame = [type_name: string, totalDlaPojazdu: bigint]\n"}]},"apps":[],"jobName":"paragraph_1579558588299_-912301966","id":"20200120-221628_215400486","dateCreated":"2020-01-20T22:16:28+0000","dateStarted":"2020-01-20T23:45:47+0000","dateFinished":"2020-01-20T23:45:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5746"},{"text":"val analiza2_DS = factsDS.\n    join(authoritiesDS, factsDS(\"local_authority_ons_code\") === authoritiesDS(\"local_authority_ons_code\")).\n    join(weathersDS, factsDS(\"weather_id\") === weathersDS(\"id\")).\n    join(vehicle_typesDS, factsDS(\"vehicle_type_id\") === vehicle_typesDS(\"type_id\")).\n    join(sumaPrzejazdowDlaPoszczegolnychTypowPojazdow, vehicle_typesDS(\"type_name\") === sumaPrzejazdowDlaPoszczegolnychTypowPojazdow(\"type_name\")).\n    groupBy(weathersDS(\"weather\"), vehicle_typesDS(\"type_name\")).\n    agg((sum(\"count\")/(\"totalDlaPojazdu\")).as(\"procentPrzejazdowDanegoTypuWDanaPogode\"))","user":"anonymous","dateUpdated":"2020-01-20T23:53:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"analiza2_DS: org.apache.spark.sql.DataFrame = [weather: string, type_name: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1579559932026_-956039071","id":"20200120-223852_170201861","dateCreated":"2020-01-20T22:38:52+0000","dateStarted":"2020-01-20T23:53:51+0000","dateFinished":"2020-01-20T23:53:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5747"},{"text":"%md \n\n### Analiza 3\n\nPorównanie przejazdów w poszczególnych regionach w poszczególnych latach dla wybranych kategorii pojazdów","user":"anonymous","dateUpdated":"2020-01-21T00:05:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Analiza 3</h3>\n<p>Porównanie przejazdów w poszczególnych regionach w poszczególnych latach dla wybranych kategorii pojazdów</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579563932056_-711658282","id":"20200120-234532_1616806603","dateCreated":"2020-01-20T23:45:32+0000","dateStarted":"2020-01-21T00:05:16+0000","dateFinished":"2020-01-21T00:05:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5748"},{"text":"val factsDS = spark.table(\"traffic.facts\").select(\"local_authority_ons_code\", \"date_id\", \"vehicle_type_id\", \"count\")\nval authoritiesDS = spark.table(\"traffic.authorities\").select(\"local_authority_ons_code\", \"region_name\")\nval datesDS = spark.table(\"traffic.dates\").select(\"id\", \"year\")\nval vehicle_typesDS = spark.table(\"traffic.vehicle_types\").select(\"type_id\", \"type_name\")","user":"anonymous","dateUpdated":"2020-01-21T00:27:17+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579565116246_1114167514","id":"20200121-000516_1902182098","dateCreated":"2020-01-21T00:05:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:5749","dateFinished":"2020-01-21T00:27:19+0000","dateStarted":"2020-01-21T00:27:17+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"factsDS: org.apache.spark.sql.DataFrame = [local_authority_ons_code: string, date_id: int ... 2 more fields]\nauthoritiesDS: org.apache.spark.sql.DataFrame = [local_authority_ons_code: string, region_name: string]\ndatesDS: org.apache.spark.sql.DataFrame = [id: int, year: int]\nvehicle_typesDS: org.apache.spark.sql.DataFrame = [type_id: int, type_name: string]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579566437863_-919579065","id":"20200121-002717_530459837","dateCreated":"2020-01-21T00:27:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6496","text":"val analiza3_DS = factsDS.\n    join(authoritiesDS, factsDS(\"local_authority_ons_code\") === authoritiesDS(\"local_authority_ons_code\")).\n    join(vehicle_typesDS, factsDS(\"vehicle_type_id\") === vehicle_typesDS(\"type_id\")).\n    join(datesDS, factsDS(\"date_id\") === datesDS(\"id\")).\n    groupBy(authoritiesDS(\"region_name\"), datesDS(\"year\"), vehicle_typesDS(\"type_name\")).\n    agg(sum(\"count\").as(\"totalDlaPojazdu\"))","dateUpdated":"2020-01-21T00:35:35+0000","dateFinished":"2020-01-21T00:35:36+0000","dateStarted":"2020-01-21T00:35:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"analiza3_DS: org.apache.spark.sql.DataFrame = [region_name: string, year: int ... 2 more fields]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579566935822_1875373416","id":"20200121-003535_1048487393","dateCreated":"2020-01-21T00:35:35+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6599"}],"name":"Project2","id":"2F1CUAJMM","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}